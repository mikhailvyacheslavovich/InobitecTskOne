<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ru.inobitec.taskone.repository.OrderMapper">
    <resultMap id="Order" type="ru.inobitec.taskone.dto.OrderDTO">
        <result property="newOrderEntity.id" column="id"/>
        <result property="newOrderEntity.orderStatusId" column="ORDER_STATUS_ID"/>
        <result property="newOrderEntity.customerFirstName" column="CUSTOMER_FIRST_NAME"/>
        <result property="newOrderEntity.customerLastName" column="CUSTOMER_LAST_NAME"/>
        <result property="newOrderEntity.customerBirthday" column="CUSTOMER_Birthday"/>
        <result property="newOrderEntity.customerPhone" column="customer_phone"/>
        <result property="newOrderEntity.customerComment" column="customer_comment"/>
        <collection property="orderItems" javaType="ArrayList" resultMap="OrderItem"/>
    </resultMap>

    <resultMap id="OrderItem" type="ru.inobitec.taskone.model.OrderItemEntity">
        <result property="id" column="id"/>
        <result property="orderId" column="order_id"/>
        <result property="itemName" column="item_name"/>
    </resultMap>

    <select id="getOrderById" parameterType="java.lang.Long" resultMap="Order">
        SELECT o.id,
               o.order_status_id,
               o.customer_first_name,
               o.customer_last_name,
               o.customer_birthday,
               o.customer_phone,
               o.customer_comment,
               i.id,
               i.order_id,
               i.item_name
        FROM "order" o
                 JOIN order_item i on o.id = i.order_id
        WHERE o.id = #{id}
    </select>

    <select id="getAllOrders" parameterType="java.lang.Long" resultMap="Order">
        SELECT o.id,
               o.order_status_id,
               o.customer_last_name,
               o.customer_phone,
               o.customer_comment,
               i.id,
               i.order_id,
               i.item_name
        FROM "order" o
                 JOIN order_item i on o.id = i.order_id
    </select>


    <insert id="addOrder" parameterType="ru.inobitec.taskone.model.OrderEntity">
        <selectKey keyProperty="id" keyColumn="id" resultType="long" order="BEFORE">SELECT nextval('ORDER_SEQ')
        </selectKey>
        INSERT INTO "order" (id, order_status_id, customer_first_name, customer_last_name,
        customer_phone, customer_birthday, customer_comment)
        VALUES (#{id}, #{orderStatusId}, #{customerFirstName}, #{customerLastName}, #{customerPhone},
        #{customerBirthday}, #{customerComment});
    </insert>


    <insert id="addOrderItems" keyColumn="id" keyProperty="id" parameterType="ru.inobitec.taskone.model.OrderItemEntity">
        insert into order_item(order_id, item_name)
        values
        <foreach collection="items" item="item" open="(" separator="),(" close=")">
            #{orderId}, #{item.itemName}
        </foreach>
    </insert>

    <update id="updateOrder" parameterType="ru.inobitec.taskone.model.OrderEntity">
        update "order"
        set order_status_id  = #{orderEntity.orderStatusId},
            customer_first_name = #{orderEntity.customerFirstName},
            customer_last_name  = #{orderEntity.customerLastName},
            customer_birthday   = #{orderEntity.customerBirthday},
            customer_phone   = #{orderEntity.customerPhone},
            customer_comment = #{orderEntity.customerComment}
        where id = #{id};
    </update>

    <update id="updateOrderItems" parameterType="ru.inobitec.taskone.model.OrderItemEntity">
        <foreach collection="items" item="item" separator=";">
            UPDATE order_item SET item_name=#{item.itemName} WHERE id = #{item.id};
        </foreach>
    </update>

    <delete id="deleteOrderById">
        DELETE
        FROM "order"
        WHERE id = #{id};
    </delete>

    <delete id="deleteOrderItemsById">
        DELETE
        FROM order_item
        WHERE order_id = #{id};
    </delete>

</mapper>
